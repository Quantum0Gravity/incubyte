Incubyte Sales Data Analysis

Overview

This repository contains SQL scripts and insights derived from the Incubyte sales dataset. The analysis provides key metrics such as total revenue, top-selling products, customer demographics, and store performance.


Dataset Description

The dataset includes transactions with details such as:
1. Transaction Amount, Date, and Payment Method
2. Customer Demographics (Age, Gender, Location)
3. Product Details (Name, Quantity, Discounts)
4. Sales Channel (Online vs. In-Store)
5. Return Rates & Customer Feedback


--Create a MySQL Table to store data with below query:
CREATE TABLE IF NOT EXISTS incubyte (
  TransactionID INT NOT NULL,
  CustomerID INT NULL,
  TransactionDate DATETIME NULL,
  TransactionAmount DECIMAL(12,2) NULL,
  PaymentMethod VARCHAR(20) NULL,
  Quantity INT NULL,
  DiscountPercent DECIMAL(5,2) NULL,
  City VARCHAR(50) NULL,
  StoreType VARCHAR(20) NULL,
  CustomerAge INT NULL,
  CustomerGender VARCHAR(10) NULL,
  LoyaltyPoints INT NULL,
  ProductName VARCHAR(50) NULL,
  Region VARCHAR(10) NULL,
  Returned ENUM('Yes','No') NULL,
  FeedbackScore INT NULL,
  ShippingCost DECIMAL(10,2) NULL,
  DeliveryTimeDays INT NULL,
  IsPromotional ENUM('Yes','No') NULL,
  PRIMARY KEY (TransactionID)
);

Assessment Task:

1. Overall Sales Performance

Insight:
Total Revenue: 10202662960.19
Total Transactions: 500000
Top 3 Cities by Revenue:
Kolkata
Ahmedabad
Bangalore

Queries:
SELECT 
    SUM(TransactionAmount) AS Total_Revenue,
    COUNT(TransactionID) AS Total_Transactions
FROM incubyte;

SELECT 
    City, 
    SUM(TransactionAmount) AS Total_Sales
FROM incubyte
GROUP BY City
ORDER BY Total_Sales DESC
LIMIT 3;


2. Customer Behavior

Insight:
Most Frequent Age Group: 60+
Gender Breakdown:
Other - 33.39%
Male - 33.33%
Female - 33.28%
Loyalty Points Impact:
High-loyalty customers (>5000 points) make more transactions, but on average, every group spends about the same, pays similar shipping costs, and gets roughly the same discount.

Queries:
WITH AgeGroups AS (
  SELECT 
    CASE 
      WHEN CustomerAge < 20 THEN 'Under 20'
      WHEN CustomerAge BETWEEN 20 AND 29 THEN '20s'
      WHEN CustomerAge BETWEEN 30 AND 39 THEN '30s'
      WHEN CustomerAge BETWEEN 40 AND 49 THEN '40s'
      WHEN CustomerAge BETWEEN 50 AND 59 THEN '50s'
      ELSE '60+' 
    END AS AgeGroup,
    COUNT(*) AS Frequency
  FROM incubyte
  WHERE CustomerAge IS NOT NULL
  GROUP BY AgeGroup
)
SELECT AgeGroup, Frequency
FROM AgeGroups
ORDER BY Frequency DESC;


WITH GenderCounts AS (
  SELECT 
    CustomerGender,
    COUNT(*) AS Count
  FROM incubyte
  WHERE CustomerGender IS NOT NULL
  GROUP BY CustomerGender
),
TotalCount AS (
  SELECT COUNT(*) AS Total
  FROM incubyte
  WHERE CustomerGender IS NOT NULL
)
SELECT 
  gc.CustomerGender,
  gc.Count,
  ROUND((gc.Count * 100.0 / tc.Total), 2) AS Percentage
FROM GenderCounts gc
CROSS JOIN TotalCount tc;

WITH LoyaltyGroups AS (
  SELECT 
    CASE 
      WHEN LoyaltyPoints < 1000 THEN 'Low (<1000)'
      WHEN LoyaltyPoints BETWEEN 1000 AND 5000 THEN 'Medium (1000-5000)'
      ELSE 'High (>5000)'
    END AS LoyaltyPointsGroup,
    COUNT(*) AS TransactionCount,
    AVG(TransactionAmount) AS AvgTransactionAmount,
    AVG(ShippingCost) AS AvgShippingCost,
    AVG(DiscountPercent) AS AvgDiscountPercent
  FROM incubyte
  WHERE LoyaltyPoints IS NOT NULL
  GROUP BY LoyaltyPointsGroup
)
SELECT *
FROM LoyaltyGroups;
